@page "/student/detail2/{id:int}"
@inject ApplicationDbContext context
@inject IWebHostEnvironment env

<h3>Student</h3>

<div class="row">
    <div class="col-md-8">
        <dl class="row">
            <dt class="col-sm-3">Jméno</dt>
            <dd class="col-sm-9">@student.FirstName</dd>
            <dt class="col-sm-3">Přijmení</dt>
            <dd class="col-sm-9">@student.LastName</dd>
            <dt class="col-sm-3">Pohlaví</dt>
            <dd class="col-sm-9">@(student.Male ? "muž" : "žena")</dd>
            <dt class="col-sm-3">Dat. narození</dt>
            <dd class="col-sm-9">@student.BirthDate.ToString("dd. MM. yyyy")</dd>
            <dt class="col-sm-3">Třída</dt>
            <dd class="col-sm-9">@student.Group.Name</dd>
        </dl>
    </div>
    <div class="col-md-4">
        <div class="text-center">
            @if (!string.IsNullOrEmpty(student.ProfilePhoto))
            {
                <img src="/profilepictures/@student.ProfilePhoto"
                     alt="@student.FirstName @student.LastName"
                     class="img-fluid rounded-circle mb-3"
                     style="max-width: 200px; max-height: 200px; object-fit: cover;" />
            }
            else
            {
                <div class="bg-light rounded-circle d-inline-flex align-items-center justify-content-center mb-3"
                     style="width: 200px; height: 200px;">
                    <i class="bi bi-person-fill" style="font-size: 100px; color: #ccc;"></i>
                </div>
                <div class="mt-3">
                    <InputFile OnChange="@LoadFile" accept="image/*" class="form-control" />
                </div>
            }
        </div>
    </div>
</div>

@code {
    Student? student = new Student();
    [Parameter]
    public int id { get; set; }

    protected override void OnInitialized()
    {
        student = context.Students
                .Include(st => st.Group)
                .Where(stud => stud.Id == id)
                .FirstOrDefault();
    }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var extension = Path.GetExtension(file.Name);
        var fileName = $"{Guid.NewGuid()}{extension}";
        var folderPath = Path.Combine(env.WebRootPath, "profilepictures");

        Directory.CreateDirectory(folderPath);

        var filePath = Path.Combine(folderPath, fileName);
        await using var fs = new FileStream(filePath, FileMode.Create);
        await file.OpenReadStream().CopyToAsync(fs);

        student.ProfilePhoto = fileName;
        await context.SaveChangesAsync();
        StateHasChanged();
    }
}